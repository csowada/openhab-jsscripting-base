"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.DateTimeType = exports.DecimalType = exports.StringType = exports.StringListType = exports.PointType = exports.UpDownType = exports.IncreaseDecreaseType = exports.RewindFastforwardType = exports.HSBType = exports.PercentType = exports.OnOffType = exports.NextPreviousType = exports.OpenClosedType = exports.StopMoveType = exports.RawType = exports.PlayPauseType = exports.RefreshType = exports.UnDefType = exports.ArithmeticGroupFunction = exports.DateTimeGroupFunction = exports.QuantityTypeArithmeticGroupFunction = exports.Type = void 0;
exports.Type = Java.type("org.openhab.core.types.Type");
// export const UnDefType: org.openhab.core.types.UnDefTypeStatic = Java.type("org.openhab.core.types.UnDefType");
// export const RefreshType: org.openhab.core.types.RefreshTypeStatic = Java.type("org.openhab.core.types.RefreshType");
// export const PlayPauseType: org.openhab.core.library.types.PlayPauseTypeStatic = Java.type("org.openhab.core.library.types.PlayPauseType");
// export const RawType: org.openhab.core.library.types.RawTypeStatic = Java.type("org.openhab.core.library.types.RawType");
// export const StopMoveType: org.openhab.core.library.types.StopMoveTypeStatic = Java.type("org.openhab.core.library.types.StopMoveType");
// export const OpenClosedType: org.openhab.core.library.types.OpenClosedTypeStatic = Java.type("org.openhab.core.library.types.OpenClosedType");
// export const NextPreviousType: org.openhab.core.library.types.NextPreviousTypeStatic = Java.type("org.openhab.core.library.types.NextPreviousType");
// export const OnOffType: org.openhab.core.library.types.OnOffTypeStatic = Java.type("org.openhab.core.library.types.OnOffType");
// export const PercentType: org.openhab.core.library.types.PercentTypeStatic = Java.type("org.openhab.core.library.types.PercentType");
// export const HSBType: org.openhab.core.library.types.HSBTypeStatic = Java.type("org.openhab.core.library.types.HSBType");
// export const RewindFastforwardType: org.openhab.core.library.types.RewindFastforwardTypeStatic = Java.type("org.openhab.core.library.types.RewindFastforwardType");
// export const IncreaseDecreaseType: org.openhab.core.library.types.IncreaseDecreaseTypeStatic = Java.type("org.openhab.core.library.types.IncreaseDecreaseType");
// export const UpDownType: org.openhab.core.library.types.UpDownTypeStatic = Java.type("org.openhab.core.library.types.UpDownType");
// export const PointType: org.openhab.core.library.types.PointTypeStatic = Java.type("org.openhab.core.library.types.PointType");
// export const StringListType: org.openhab.core.library.types.StringListTypeStatic = Java.type("org.openhab.core.library.types.StringListType");
// export const StringType: org.openhab.core.library.types.StringTypeStatic = Java.type("org.openhab.core.library.types.StringType");
// export const DecimalType: org.openhab.core.library.types.DecimalTypeStatic = Java.type("org.openhab.core.library.types.DecimalType");
// export const DateTimeType: org.openhab.core.library.types.DateTimeTypeStatic = Java.type("org.openhab.core.library.types.DateTimeType");
exports.QuantityTypeArithmeticGroupFunction = Java.type("org.openhab.core.library.types.QuantityTypeArithmeticGroupFunction");
exports.DateTimeGroupFunction = Java.type("org.openhab.core.library.types.DateTimeGroupFunction");
exports.ArithmeticGroupFunction = Java.type("org.openhab.core.library.types.ArithmeticGroupFunction");
var _runtime_1 = require("@runtime");
Object.defineProperty(exports, "UnDefType", { enumerable: true, get: function () { return _runtime_1.UnDefType; } });
Object.defineProperty(exports, "RefreshType", { enumerable: true, get: function () { return _runtime_1.RefreshType; } });
Object.defineProperty(exports, "PlayPauseType", { enumerable: true, get: function () { return _runtime_1.PlayPauseType; } });
Object.defineProperty(exports, "RawType", { enumerable: true, get: function () { return _runtime_1.RawType; } });
Object.defineProperty(exports, "StopMoveType", { enumerable: true, get: function () { return _runtime_1.StopMoveType; } });
Object.defineProperty(exports, "OpenClosedType", { enumerable: true, get: function () { return _runtime_1.OpenClosedType; } });
Object.defineProperty(exports, "NextPreviousType", { enumerable: true, get: function () { return _runtime_1.NextPreviousType; } });
Object.defineProperty(exports, "OnOffType", { enumerable: true, get: function () { return _runtime_1.OnOffType; } });
Object.defineProperty(exports, "PercentType", { enumerable: true, get: function () { return _runtime_1.PercentType; } });
Object.defineProperty(exports, "HSBType", { enumerable: true, get: function () { return _runtime_1.HSBType; } });
Object.defineProperty(exports, "RewindFastforwardType", { enumerable: true, get: function () { return _runtime_1.RewindFastforwardType; } });
Object.defineProperty(exports, "IncreaseDecreaseType", { enumerable: true, get: function () { return _runtime_1.IncreaseDecreaseType; } });
Object.defineProperty(exports, "UpDownType", { enumerable: true, get: function () { return _runtime_1.UpDownType; } });
Object.defineProperty(exports, "PointType", { enumerable: true, get: function () { return _runtime_1.PointType; } });
Object.defineProperty(exports, "StringListType", { enumerable: true, get: function () { return _runtime_1.StringListType; } });
Object.defineProperty(exports, "StringType", { enumerable: true, get: function () { return _runtime_1.StringType; } });
Object.defineProperty(exports, "DecimalType", { enumerable: true, get: function () { return _runtime_1.DecimalType; } });
Object.defineProperty(exports, "DateTimeType", { enumerable: true, get: function () { return _runtime_1.DateTimeType; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib3BlbmhhYi0zLjAuMC10eXBlLXR5cGVzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL29wZW5oYWItdHlwZXMvb3BlbmhhYi0zLjAuMC10eXBlLXR5cGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFhLFFBQUEsSUFBSSxHQUFnQyxJQUFJLENBQUMsSUFBSSxDQUFDLDZCQUE2QixDQUFDLENBQUM7QUFFMUYsa0hBQWtIO0FBQ2xILHdIQUF3SDtBQUV4SCw4SUFBOEk7QUFDOUksNEhBQTRIO0FBQzVILDJJQUEySTtBQUMzSSxpSkFBaUo7QUFDakosdUpBQXVKO0FBQ3ZKLGtJQUFrSTtBQUNsSSx3SUFBd0k7QUFDeEksNEhBQTRIO0FBQzVILHNLQUFzSztBQUN0SyxtS0FBbUs7QUFDbksscUlBQXFJO0FBQ3JJLGtJQUFrSTtBQUNsSSxpSkFBaUo7QUFDakoscUlBQXFJO0FBQ3JJLHdJQUF3STtBQUN4SSwySUFBMkk7QUFFOUgsUUFBQSxtQ0FBbUMsR0FBNkUsSUFBSSxDQUFDLElBQUksQ0FBQyxvRUFBb0UsQ0FBQyxDQUFDO0FBQ2hNLFFBQUEscUJBQXFCLEdBQStELElBQUksQ0FBQyxJQUFJLENBQUMsc0RBQXNELENBQUMsQ0FBQztBQUN0SixRQUFBLHVCQUF1QixHQUFpRSxJQUFJLENBQUMsSUFBSSxDQUFDLHdEQUF3RCxDQUFDLENBQUM7QUFFeksscUNBR2tCO0FBRmQscUdBQUEsU0FBUyxPQUFBO0FBQUUsdUdBQUEsV0FBVyxPQUFBO0FBQUUseUdBQUEsYUFBYSxPQUFBO0FBQUUsbUdBQUEsT0FBTyxPQUFBO0FBQUUsd0dBQUEsWUFBWSxPQUFBO0FBQUUsMEdBQUEsY0FBYyxPQUFBO0FBQUUsNEdBQUEsZ0JBQWdCLE9BQUE7QUFBRSxxR0FBQSxTQUFTLE9BQUE7QUFBRSx1R0FBQSxXQUFXLE9BQUE7QUFBRSxtR0FBQSxPQUFPLE9BQUE7QUFDL0gsaUhBQUEscUJBQXFCLE9BQUE7QUFBRSxnSEFBQSxvQkFBb0IsT0FBQTtBQUFFLHNHQUFBLFVBQVUsT0FBQTtBQUFFLHFHQUFBLFNBQVMsT0FBQTtBQUFFLDBHQUFBLGNBQWMsT0FBQTtBQUFFLHNHQUFBLFVBQVUsT0FBQTtBQUFFLHVHQUFBLFdBQVcsT0FBQTtBQUFFLHdHQUFBLFlBQVksT0FBQSJ9